.text 
	li $a1, 8
	li $a0, 3
	jal permu
	jal print
	j exit
	
#fonction permutation qui calcul a0 permit a1
permu:	#sauvegarde des données
	sw $ra, -4($sp)
	sw $a0, -8($sp)
	sw $a1, -12($sp)
	addi $sp, $sp, -12
	
	beqz $a0, ret1#si k = 0
	bgt $a0, $a1, ret2#si k > n
	
	#t0 = a0 parmit a1-1
	add $a1, $a1, -1
	jal permu
	sw $v0, -4($sp)
	addi $sp, $sp, -4
	
	#t1 = a0-1 parmit a1-1
	add $a0, $a0, -1
	jal permu
	lw $t0, 0($sp)
	addi $sp, $sp, 4
	
	add $v0, $v0, $t0
	
	#récupération des données
	lw $a1, 0($sp)
	lw $a0, 4($sp)
	lw $ra, 8($sp)
	addi $sp, $sp, 12
	jr $ra
	
#si k = 0
ret1:	li $v0, 1
	lw $a1, 0($sp)
	lw $a0, 4($sp)
	lw $ra, 8($sp)
	addi $sp, $sp, 12
	jr $ra
#si k > n
ret2:	move $v0, $zero
	lw $a1, 0($sp)
	lw $a0, 4($sp)
	lw $ra, 8($sp)
	addi $sp, $sp, 12
	jr $ra
	
print:	move $a0, $v0
	li $v0, 1
	syscall
	jr $ra

exit:	li $v0, 10
        syscall
